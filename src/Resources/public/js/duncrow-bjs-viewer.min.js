function __awaiter(e,t,i,a){function s(e){return e instanceof i?e:new i(function(t){t(e)})}return new(i||(i=Promise))(function(i,n){function r(e){try{h(a.next(e))}catch(e){n(e)}}function o(e){try{h(a.throw(e))}catch(e){n(e)}}function h(e){e.done?i(e.value):s(e.value).then(r,o)}h((a=a.apply(e,t||[])).next())})}class DCCamera{constructor(e,t,i=null){this._cameraSettings=i,this._camera=new BABYLON.ArcRotateCamera("Camera",0,0,0,BABYLON.Vector3.Zero(),this._scene),this._camera.attachControl(t),this._camera.setPosition(new BABYLON.Vector3(0,1,2)),this._camera.checkCollisions=!0,this._camera.alpha=1,this._camera.useFramingBehavior=!0;const a=Math.PI/180;i&&(i.radius&&(this._camera.radius=i.radius),i.upperVerticalAngelLimit&&(this._camera.lowerBetaLimit=Math.PI/2-a*i.upperVerticalAngelLimit),i.lowerVerticalAngelLimit&&(this._camera.upperBetaLimit=Math.PI/2+a*i.lowerVerticalAngelLimit),i.upperHorizontalAngelLimit&&(this._camera.upperAlphaLimit=this._camera.alpha+a*i.upperHorizontalAngelLimit),i.lowerHorizontalAngelLimit&&(this._camera.lowerAlphaLimit=this._camera.alpha+a*i.lowerHorizontalAngelLimit),i.panningSensibility&&(this._camera.panningSensibility=i.panningSensibility),i.wheelPrecision&&(this._camera.wheelPrecision=i.wheelPrecision),i.useAutoRotationBehavior&&(this._camera.useAutoRotationBehavior=i.useAutoRotationBehavior),i.rotationSpeed&&(this._camera.autoRotationBehavior.idleRotationSpeed=i.rotationSpeed),i.minZ&&(this._camera.minZ=i.minZ),i.maxZ&&(this._camera.maxZ=i.maxZ))}setCameraTarget(e){this._camera.focusOn(e,!0),this._camera.zoomOn(e,!0),this._cameraSettings&&this._camera.radius&&(this._cameraSettings.minZoom&&(this._camera.lowerRadiusLimit=this._camera.radius*this._cameraSettings.minZoom),this._cameraSettings.maxZoom&&(this._camera.upperRadiusLimit=this._camera.radius*this._cameraSettings.maxZoom))}}class EnvironmentHelper{constructor(e,t){let i={createGround:this.parseValue(t,"createGround",!0),groundSize:this.parseValue(t,"groundSize",50),createSkybox:this.parseValue(t,"createSkybox",!0),skyboxSize:this.parseValue(t,"skyboxSize",400),skyboxColor:this.parseValue(t,"skyboxColor",BABYLON.Color3.Gray()),groundColor:this.parseValue(t,"groundColor",BABYLON.Color3.White()),groundShadowLevel:this.parseValue(t,"groundShadowLevel",0),setupImageProcessing:this.parseValue(t,"setupImageProcessing",!1),cameraContrast:this.parseValue(t,"cameraContrast",1.6),cameraExposure:this.parseValue(t,"cameraExposure",.6)};this._environment=e.createDefaultEnvironment(i)}parseValue(e,t,i){return t in e?null==e[t]?null:e[t]:i}}class CameraSettingsModel{constructor(){this.panningSensibility=1e3,this.wheelPrecision=100,this.useAutoRotationBehavior=!1,this.rotationSpeed=.1}}class DCBabylonJsViewer{constructor(e,t=null,i){if(this._userInteractionEnabled=!0,this.sceneCallbacks={addMaterial:function(e,t){for(let t of e._scene.materials)if(e!=t&&e.id==t.id)throw new Error("material with id already exists"+e.id)},addMesh:function(e,t){for(let t of e._scene.meshes)if(e!=t&&e.id==t.id)throw new Error("mesh with id already exists "+e.id)},addLight:function(e,t){for(let t of e._scene.lights)if(e!=t&&e.id==t.id)throw new Error("light with id already exists "+e.id)}},"undefined"!=typeof BABYLON){t&&(this._cameraSettings=t);let a=document.getElementById(e);if(!a)throw new Error(`'${e}' was not found.`);{this._canvas=a,this._engine=new BABYLON.Engine(this._canvas,!0,{preserveDrawingBuffer:!0,stencil:!0}),this._scene=new BABYLON.Scene(this._engine),this.registersceneCallbacks(),this._scene.createDefaultLight(),this._camera=new DCCamera(this._scene,this._canvas,this._cameraSettings),this._environment=new EnvironmentHelper(this._scene,i);let e=this;e.engine.clear(e.backgroundColor,!0,!0),this._engine.runRenderLoop(function(){e._scene&&e._scene.cameras.length>0&&e._scene.render()}),window.addEventListener("resize",function(){e.engine.resize()}),this._highlightLayer=new BABYLON.HighlightLayer("hl1",this._scene,{alphaBlendingMode:BABYLON.Engine.ALPHA_ADD,mainTextureFixedSize:4096,blurTextureSizeRatio:.5,blurHorizontalSize:30,blurVerticalSize:30,isStroke:!0}),this._highlightLayer.outerGlow=!1,this._highlightLayer.innerGlow=!0}}}get canvas(){return this._canvas}get engine(){return this._engine}get scene(){return this._scene}set scene(e){this._scene=e}get userInteractionEnabled(){return this._userInteractionEnabled}set userInteractionEnabled(e){this._userInteractionEnabled=e,this._scene&&this._scene.activeCamera&&(this._userInteractionEnabled?this._scene.activeCamera.attachControl(this._canvas):this._scene.activeCamera.detachControl(this._canvas))}registerOnMeshSelection(e,t,i){this._scene.onPointerDown=((a,s)=>{if(this._highlightLayer.removeAllMeshes(),s.hit&&!t.includes(s.pickedMesh.name)){if(e({meshName:s.pickedMesh.name,mouseAttributes:{x:a.clientX,y:a.clientY,mouseButton:a.button}}),i){const e=this._scene.meshes.find(e=>e.id==s.pickedMesh.id);this._highlightLayer.addMesh(e,i)}}else e({meshName:void 0,mouseAttributes:{x:a.clientX,y:a.clientY,mouseButton:a.button}})})}unregisterOnMeshSelection(){this._scene.onPointerDown=null,this._highlightLayer.removeAllMeshes()}get backgroundColor(){return this._scene.clearColor}set backgroundColor(e){this._scene.clearColor=e}registersceneCallbacks(){this._scene.onNewMaterialAddedObservable.add(this.sceneCallbacks.addMaterial),this._scene.onNewMeshAddedObservable.add(this.sceneCallbacks.addMesh),this._scene.onNewLightAddedObservable.add(this.sceneCallbacks.addLight)}loadObject(e){return __awaiter(this,void 0,void 0,function*(){this._scene.onReadyObservable.add((e,t)=>{this.loadingFinished()}),this.loadingStarted();const t=yield BABYLON.SceneLoader.ImportMeshAsync("","./",e,this._scene);return t.meshes.length?(this._camera.setCameraTarget(t.meshes),t.meshes):[]})}loadTexture(e){}loadMTLFile(e){let t=new BABYLON.MTLFileLoader;t.parseMTL(this._scene,e,"./",!0)}resize(){this.engine&&this.engine.resize()}takeScreenshot(e,t=this._scene._activeCamera){return __awaiter(this,void 0,void 0,function*(){return this._scene.render(),yield BABYLON.Tools.CreateScreenshotUsingRenderTargetAsync(this._engine,t,e,void 0,void 0,!0)})}}export{CameraSettingsModel,DCBabylonJsViewer,DCCamera,EnvironmentHelper};