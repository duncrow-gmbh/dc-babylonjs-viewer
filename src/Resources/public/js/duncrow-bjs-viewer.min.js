function __awaiter(e,t,i,s){function a(e){return e instanceof i?e:new i(function(t){t(e)})}return new(i||(i=Promise))(function(i,n){function r(e){try{h(s.next(e))}catch(e){n(e)}}function o(e){try{h(s.throw(e))}catch(e){n(e)}}function h(e){e.done?i(e.value):a(e.value).then(r,o)}h((s=s.apply(e,t||[])).next())})}class DCCamera{constructor(e,t,i=null){this._viewer=e,this._scene=e.scene,this._cameraSettings=i,this._camera=new BABYLON.ArcRotateCamera("Camera",0,0,0,BABYLON.Vector3.Zero(),this._scene),this._camera.attachControl(t),this._camera.setPosition(new BABYLON.Vector3(0,1,2)),this._camera.checkCollisions=!0,this._camera.alpha=1,this._camera.useFramingBehavior=!0;const s=Math.PI/180;i&&(i.radius&&(this._camera.radius=i.radius),i.upperVerticalAngelLimit&&(this._camera.lowerBetaLimit=Math.PI/2-s*i.upperVerticalAngelLimit),i.lowerVerticalAngelLimit&&(this._camera.upperBetaLimit=Math.PI/2+s*i.lowerVerticalAngelLimit),i.upperHorizontalAngelLimit&&(this._camera.upperAlphaLimit=this._camera.alpha+s*i.upperHorizontalAngelLimit),i.lowerHorizontalAngelLimit&&(this._camera.lowerAlphaLimit=this._camera.alpha+s*i.lowerHorizontalAngelLimit),i.panningSensibility&&(this._camera.panningSensibility=i.panningSensibility),i.wheelPrecision&&(this._camera.wheelPrecision=i.wheelPrecision),i.useAutoRotationBehavior&&(this._camera.useAutoRotationBehavior=i.useAutoRotationBehavior),i.rotationSpeed&&(this._camera.autoRotationBehavior.idleRotationSpeed=i.rotationSpeed),i.minZ&&(this._camera.minZ=i.minZ),i.maxZ&&(this._camera.maxZ=i.maxZ)),this._initCameraPosition=this._camera.position}get camera(){return this._camera}set camera(e){this._camera=e}get initCameraPosition(){return this._initCameraPosition}set initCameraPosition(e){this._initCameraPosition=e}setCameraTarget(e){this._sceneTargets=e,this._camera.focusOn(e,!0),this._camera.zoomOn(e,!0),this._cameraSettings&&this._camera.radius&&(this._cameraSettings.minZoom&&(this._camera.lowerRadiusLimit=this._camera.radius*this._cameraSettings.minZoom),this._cameraSettings.maxZoom&&(this._camera.upperRadiusLimit=this._camera.radius*this._cameraSettings.maxZoom))}targAnimEnded(){}animateCameraTargetToPosition(e,t,i,s,a="target"){var n=new BABYLON.CubicEase;n.setEasingMode(BABYLON.EasingFunction.EASINGMODE_EASEINOUT);var r=s;void 0!==s.x&&(r=new BABYLON.Vector3(-s.x,s.y,s.z)),BABYLON.Animation.CreateAndStartAnimation("at5",e,a,t,i,e[a],r,0,n,this.targAnimEnded)}refocusCamera(e){var t=this._sceneTargets;e&&(t=e);var i=200,s=200;this.animateCameraTargetToPosition(this._camera,i,s,t[0].position),!e&&this._cameraSettings&&this._camera.radius&&(this._cameraSettings.minZoom&&(this._camera.lowerRadiusLimit=this._camera.radius*this._cameraSettings.minZoom),this._cameraSettings.maxZoom&&(this._camera.upperRadiusLimit=this._camera.radius*this._cameraSettings.maxZoom))}zoomOnMeshes(e){if(!e||!e.length)var t=this._viewer.scene.meshes.filter(e=>this._viewer.usedMeshesList.indexOf(e.id)>-1);const i=new BABYLON.FramingBehavior;this._camera.addBehavior(i),i.zoomOnMeshesHierarchy(t)}}class DCEnvironmentHelper{constructor(e,t){let i={createGround:this.parseValue(t,"createGround",!0),groundSize:this.parseValue(t,"groundSize",50),createSkybox:this.parseValue(t,"createSkybox",!0),skyboxSize:this.parseValue(t,"skyboxSize",400),skyboxColor:this.parseValue(t,"skyboxColor",BABYLON.Color3.Gray()),groundColor:this.parseValue(t,"groundColor",BABYLON.Color3.White()),groundShadowLevel:this.parseValue(t,"groundShadowLevel",0),setupImageProcessing:this.parseValue(t,"setupImageProcessing",!1),cameraContrast:this.parseValue(t,"cameraContrast",1.6),cameraExposure:this.parseValue(t,"cameraExposure",.6)};this._environment=e.createDefaultEnvironment(i)}parseValue(e,t,i){return t in e?null==e[t]?null:e[t]:i}}var DCGuiModel;(function(e){e[e.ShowHideElements=0]="ShowHideElements",e[e.AnimationElements=1]="AnimationElements"})(DCGuiModel||(DCGuiModel={}));class DCGui{constructor(e,t,i,s=DCGuiModel.ShowHideElements){this._class="show-hide-checkbox",this._viewer=e,this._containerId=t,this._id=i;var a="input";if(s==DCGuiModel.ShowHideElements){a="input";var n=e.scene.meshes.filter(t=>e.usedMeshesList.indexOf(t.id)>-1);if(n.length){this._showHideAllId="dc-"+this._id+"-showhide-all",this.createElement(a,this._showHideAllId,"show-hide-all");for(let e=0;e<n.length;e++){var r="dc-"+this._id+"-showhide-"+e;this.createElement(a,r,n[e].name)}}}else if(s==DCGuiModel.AnimationElements){a="button",this._class="play-stop-animation";var o=e.scene.animationGroups;if(o.length)for(let e=0;e<o.length;e++){r="dc-"+this._id+"-animation-"+e;this.createElement(a,r,o[e].name,e)}this._viewer.scene.animationGroups.forEach((t,i)=>{t.metadata="test",t.onAnimationEndObservable.add((t,i)=>{var s=t.animation.name.replace(/(_channel[0-9]*)/,""),a=e.scene.animationGroups.indexOf(e.scene.animationGroups.find(e=>e.name==s));if(a>-1){var n=document.querySelector("#"+this._containerId),r=n.querySelectorAll("."+this._class);r[a].classList.remove("playing")}})})}}createElement(e,t,i,s=0){var a=document.createElement(e);a.type="input"==e?"checkbox":"button",a.id=t,a.className=this._class,a.name=t,a.value=i,"input"==e?(a.checked=!0,a.addEventListener("change",e=>this.hideShowElements(e),!1)):"button"==e&&(a.textContent=i,a.addEventListener("click",e=>this.animationStartStop(e,s),!1));var n=document.createElement("label");n.htmlFor=t,n.appendChild(document.createTextNode(i));var r=document.createElement("div");r.id=t+"-container",r.appendChild(a),r.appendChild(n);var o=document.getElementById(this._containerId);o.appendChild(r)}hideShowElements(e){var t=this._viewer.scene.meshes,i=document.querySelector("#"+this._containerId),s=i.querySelectorAll("."+this._class);if(e.target.id==this._showHideAllId){t.map(t=>t.isVisible=e.target.checked);for(var a=0;a<s.length;a++)s[a].checked=e.target.checked}else for(a=0;a<s.length;a++)"show-hide-all"!=s[a].value&&(t.find(e=>e.id==s[a].value).isVisible=s[a].checked)}animationStartStop(e,t){this._viewer.scene.animationGroups.forEach((e,i)=>{i!=t&&e.stop()});var i=this._viewer.scene.animationGroups[t];i.isStarted?(i.stop(),e.target.classList.remove("playing")):(i.play(!(2==t)),e.target.classList.add("playing"))}}class DCInfopoints{constructor(e,t,i,s){var a=BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI("UI"),n=[],r=[];for(let s=0;s<e.scene.meshes.length;s++){var o=e.scene.meshes[s];if(o.id.includes(t)){o.isVisible=!1;var h=BABYLON.GUI.Button.CreateImageButton("but","",i);h.width="34px",h.height="34px",h.image.width="34px",h.image.height="34px",h.background="transparent",h.thickness=0,a.addControl(h),h.linkWithMesh(o),n.push(h),r.push(o)}}for(let t=0;t<n.length;t++)n[t].onPointerClickObservable.add(function(i){var a=e.camera;a.animateCameraTargetToPosition(a.camera,200,200,r[t].position),a.animateCameraTargetToPosition(a.camera,200,200,s,"radius")})}}class DCCameraSettingsModel{constructor(){this.panningSensibility=1e3,this.wheelPrecision=100,this.useAutoRotationBehavior=!1,this.rotationSpeed=.1}}class DCEnvironmentSettingsModel{constructor(){this.createGround=!1,this.groundSize=50,this.createSkybox=!1}}class DCBabylonJsViewer{constructor(e,t=null,i){if(this._blacklist=["BackgroundHelper","BackgroundPlane","BackgroundSkybox"],this._whitelist=[],this._usedMeshesList=[],this._userInteractionEnabled=!0,this.sceneCallbacks={addMaterial:function(e,t){for(let t of e._scene.materials)if(e!=t&&e.id==t.id)throw new Error("material with id already exists"+e.id)},addMesh:function(e,t){for(let t of e._scene.meshes)if(e!=t&&e.id==t.id)throw new Error("mesh with id already exists "+e.id)},addLight:function(e,t){for(let t of e._scene.lights)if(e!=t&&e.id==t.id)throw new Error("light with id already exists "+e.id)}},"undefined"!=typeof BABYLON){t&&(this._cameraSettings=t);let s=document.getElementById(e);if(!s)throw new Error(`'${e}' was not found.`);{this._canvas=s,this._engine=new BABYLON.Engine(this._canvas,!0,{preserveDrawingBuffer:!0,stencil:!0}),this._scene=new BABYLON.Scene(this._engine),this.registersceneCallbacks(),this._scene.createDefaultLight(),this._camera=new DCCamera(this,this._canvas,this._cameraSettings),this._environment=new DCEnvironmentHelper(this._scene,i);let e=this;e.engine.clear(e.backgroundColor,!0,!0),this._engine.runRenderLoop(function(){e._scene&&e._scene.cameras.length>0&&e._scene.render()}),window.addEventListener("resize",function(){e.engine.resize()}),this._highlightLayer=new BABYLON.HighlightLayer("hl1",this._scene,{alphaBlendingMode:BABYLON.Engine.ALPHA_ADD,mainTextureFixedSize:4096,blurTextureSizeRatio:.5,blurHorizontalSize:30,blurVerticalSize:30,isStroke:!0}),this._highlightLayer.outerGlow=!1,this._highlightLayer.innerGlow=!0}}}get canvas(){return this._canvas}get engine(){return this._engine}get blacklist(){return this._blacklist}set blacklist(e){e.length?(this._blacklist=[...new Set([...this._blacklist,...e])],this.setUsedMeshesList()):this._blacklist=[]}get whitelist(){return this._whitelist}set whitelist(e){e.length?(this._whitelist=[...new Set([...this._whitelist,...e])],this.setUsedMeshesList()):this._whitelist=[]}get usedMeshesList(){return this._usedMeshesList}set usedMeshesList(e){this._usedMeshesList=e}setUsedMeshesList(){this._usedMeshesList=[];var e=this._scene.meshes;if(e.length)for(let t=0;t<e.length;t++)this._whitelist.length&&!(this._whitelist.indexOf(e[t].id)>-1)||this._blacklist.length&&this._blacklist.find(i=>e[t].id.toLowerCase().includes(i.toLowerCase()))||this._usedMeshesList.push(e[t].id)}get camera(){return this._camera}set camera(e){this._camera=e}get scene(){return this._scene}set scene(e){this._scene=e}get userInteractionEnabled(){return this._userInteractionEnabled}set userInteractionEnabled(e){this._userInteractionEnabled=e,this._scene&&this._scene.activeCamera&&(this._userInteractionEnabled?this._scene.activeCamera.attachControl(this._canvas):this._scene.activeCamera.detachControl(this._canvas))}registerOnMeshSelection(e,t){this._scene.onPointerDown=((i,s)=>{if(this._highlightLayer.removeAllMeshes(),s.hit&&!this._blacklist.includes(s.pickedMesh.name)){if(e({meshName:s.pickedMesh.name,mouseAttributes:{x:i.clientX,y:i.clientY,mouseButton:i.button}}),t){const e=this._scene.meshes.find(e=>e.id==s.pickedMesh.id);this._highlightLayer.addMesh(e,t)}}else e({meshName:void 0,mouseAttributes:{x:i.clientX,y:i.clientY,mouseButton:i.button}})})}unregisterOnMeshSelection(){this._scene.onPointerDown=null,this._highlightLayer.removeAllMeshes()}get backgroundColor(){return this._scene.clearColor}set backgroundColor(e){this._scene.clearColor=e}registersceneCallbacks(){this._scene.onNewMaterialAddedObservable.add(this.sceneCallbacks.addMaterial),this._scene.onNewMeshAddedObservable.add(this.sceneCallbacks.addMesh),this._scene.onNewLightAddedObservable.add(this.sceneCallbacks.addLight)}loadObject(e){return __awaiter(this,void 0,void 0,function*(){this._scene.onReadyObservable.add((e,t)=>{this.setUsedMeshesList(),this.loadingFinished(),this._scene.animationGroups.forEach((e,t)=>{e.stop()})}),this.loadingStarted();const t=yield BABYLON.SceneLoader.ImportMeshAsync("","./",e,this._scene);return t.meshes.length?(this._camera.setCameraTarget(t.meshes),t.meshes):[]})}loadTexture(e){}loadMTLFile(e){let t=new BABYLON.MTLFileLoader;t.parseMTL(this._scene,e,"./",!0)}resize(){this.engine&&this.engine.resize()}takeScreenshot(e,t=this._scene._activeCamera){return __awaiter(this,void 0,void 0,function*(){return this._scene.render(),yield BABYLON.Tools.CreateScreenshotUsingRenderTargetAsync(this._engine,t,e,void 0,void 0,!0)})}}export{DCBabylonJsViewer,DCCamera,DCCameraSettingsModel,DCEnvironmentHelper,DCEnvironmentSettingsModel,DCGui,DCGuiModel,DCInfopoints};